"""Recreate Tables

Revision ID: 8f30f766c928
Revises: 130a5d458411
Create Date: 2024-06-12 12:38:35.640798

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = '8f30f766c928'
down_revision: Union[str, None] = '130a5d458411'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Eliminar el tipo ENUM solo si existe
    tipousuario_enum = postgresql.ENUM('ADULTO', 'NINO', 'ADULTO_MAYOR', name='tipousuario')
    tipousuario_enum.drop(op.get_bind(), checkfirst=True)

    profesionusuario_enum = postgresql.ENUM('ESTUDIANTE', 'MAESTRO', name='profesionusuario')
    profesionusuario_enum.drop(op.get_bind(), checkfirst=True)

    ubicacionasiento_enum = postgresql.ENUM('pasillo', 'ventana', name='ubicacionasiento')
    ubicacionasiento_enum.drop(op.get_bind(), checkfirst=True)
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('asientos',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('numero', sa.Integer(), nullable=True),
    sa.Column('fila', sa.String(length=1), nullable=True),
    sa.Column('disponible', sa.Boolean(), nullable=True),
    sa.Column('ubicacion', sa.Enum('PASILLO', 'VENTANA', name='ubicacionasiento'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('usuarios',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('nombre', sa.String(length=50), nullable=True),
    sa.Column('tipo', sa.Enum('ADULTO', 'NINO', 'ADULTO_MAYOR', name='tipousuario'), nullable=True),
    sa.Column('profesion', sa.Enum('ESTUDIANTE', 'MAESTRO', 'NINGUNO', name='profesionusuario'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('boletos',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('asiento_id', sa.Integer(), nullable=True),
    sa.Column('usuario_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['asiento_id'], ['asientos.id'], ),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('boletos')
    op.drop_table('usuarios')
    op.drop_table('asientos')
    # ### end Alembic commands ###
